---
interface Props {
    events: {date: string, title: string, desc: string, website?: string}[]; 
};

const {events} = Astro.props;
---

<div class="w-full flex justify-center px-4">
  <ol class="relative border-s border-gray-200 dark:border-gray-700 max-w-3xl w-full">
    {events.map((event) => (
      <li class="mb-12 ms-4">
        <div class="absolute w-3 h-3 bg-gray-200 rounded-full mt-1.5 -start-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"></div>
        <time class="mb-2 text-base font-medium text-gray-500 dark:text-gray-400">
          {event.date}
        </time>
        <h3 class="text-2xl font-bold text-gray-900 dark:text-white">
          {event.title}
        </h3>
        <p class="mb-4 text-lg text-gray-600 dark:text-gray-300">
          {event.desc}
        </p>
        {event.website && (
          <a
            href={event.website}
            target="_blank"
            class="inline-flex items-center px-5 py-2.5 text-base font-medium text-gray-900 bg-white border border-gray-200 rounded-lg hover:bg-gray-100 hover:text-blue-700 focus:z-10 focus:ring-4 focus:outline-none focus:ring-gray-100 dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 dark:hover:text-white dark:hover:bg-gray-700 dark:focus:ring-gray-700"
          >
            Learn more about the structure
            <svg
              class="w-4 h-4 ms-2 rtl:rotate-180"
              aria-hidden="true"
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 14 10"
            >
              <path
                stroke="currentColor"
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M1 5h12m0 0L9 1m4 4L9 9"
              />
            </svg>
          </a>
        )}
      </li>
    ))}
  </ol>
</div>


